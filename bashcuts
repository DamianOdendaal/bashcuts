#!/bin/bash
# Bash Keyboard Shortcuts

function usage() {
cat <<-EOF

  Usage: $0 [option]

    Options: # if no option is provided all shortcuts are displayed

    -h, --help       usage information
    -m, --moving     moving the cursor
    -e, --editing    editing
    -H, --history    history
    -p, --process    process control

	EOF
	exit 0;
}

read -d "" moving <<-EOF
__________________

Moving the cursor:
__________________

  Ctrl + a   Go to the beginning of the line (Home)
  Ctrl + e   Go to the End of the line (End)
  Ctrl + p   Previous command (Up arrow)
  Ctrl + n   Next command (Down arrow)
   Alt + b   Back (left) one word
   Alt + f   Forward (right) one word
  Ctrl + f   Forward one character
  Ctrl + b   Backward one character
  Ctrl + xx  Toggle between the start of line and current cursor position

EOF

read -d "" editing <<EOF
________

Editing:
________

  Ctrl + L   Clear the Screen, similar to the clear command
  Ctrl + u   Cut/delete the line before the cursor position.
   Alt + Del Delete the Word before the cursor.
   Alt + d   Delete the Word after the cursor.
  Ctrl + d   Delete character under the cursor
  Ctrl + h   Delete character before the cursor (Backspace)
  Ctrl + w   Cut the Word before the cursor to the clipboard.
  Ctrl + k   Cut the Line after the cursor to the clipboard.
   Alt + t   Swap current word with previous
  Ctrl + t   Swap the last two characters before the cursor (typo).
  Esc  + t   Swap the last two words before the cursor.
  Ctrl + y   Paste the last thing to be cut (yank)
   Alt + u   UPPER capitalize every character from the cursor to the end of the current word.
   Alt + l   Lower the case of every character from the cursor to the end of the current word.
   Alt + c   Capitalize the character under the cursor and move to the end of the word.
   Alt + r   Cancel the changes and put back the line as it was in the history (revert).
  Ctrl + _   Undo

  TAB        Tab completion for file/directory names

EOF

read -d "" hist <<EOF
________

History:
________

  Ctrl + r   Recall the last command including the specified character(s)
             searches the command history as you type.
             Equivalent to : vim ~/.bash_history.
  Ctrl + p   Previous command in history (i.e. walk back through the command history)
  Ctrl + n   Next command in history (i.e. walk forward through the command history)

  Ctrl + s   Go back to the next most recent command.
             (beware to not execute it from a terminal because this will also launch its XOFF).
  Ctrl + o   Execute the command found via Ctrl+r or Ctrl+s
  Ctrl + g   Escape from history searching mode
        !!   Repeat last command
      !abc   Run last command starting with abc
    !abc:p   Print last command starting with abc
        !$   Last argument of previous command
   ALT + .   Last argument of previous command
        !*   All arguments of previous command
  ^abc­^­def   Run previous command, replacing abc with def

EOF

read -d "" procctrl <<EOF
________________

Process control:
________________

  Ctrl + C   Interrupt/Kill whatever you are running (SIGINT)
  Ctrl + l   Clear the screen
  Ctrl + s   Stop output to the screen (for long running verbose commands)
  Ctrl + q   Allow output to the screen (if previously stopped using command above)
  Ctrl + D   Send an EOF marker, unless disabled by an option, this will close the current shell (EXIT)
  Ctrl + Z   Send the signal SIGTSTP to the current task, which suspends it.
             To return to it later enter fg 'process name' (foreground).

EOF

function showall() {
	cat <<-EOF
		$moving
		$editing
		$hist
		$procctrl
	EOF
	exit 0;
}

[ "$1" ] || showall

case $1 in
"-h" | "--help")
	usage
	;;
"-m" | "--moving")
	echo "$moving"
	;;
"-e" | "--editing")
	echo "$editing"
	;;
"-H" | "--history")
	echo "$hist"
	;;
"-p" | "--process")
	echo "$procctrl"
	;;
*)
	usage
	;;
esac
